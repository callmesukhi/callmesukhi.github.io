name: Send Email on Approved Label

on:
  issues:
    types:
      - labeled

permissions:
  issues: read
  contents: read
 
jobs:
  send_email:
    if: github.event.label.name == 'Approved'
    runs-on: ubuntu-latest
    permissions:
        issues: read
        contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: üßπ Sanitize issue body and save to file
        run: |
          body="${{ github.event.issue.body }}"
          body=$(echo "$body" | sed -E 's/`([^`]*)`/**\1**/g')
          body=$(echo "$body" | sed -E '/^```/,/^```/s/^/**/' | sed -E '/^```/d')
          echo "$body" > issue-body.txt
          
      - name: ‚úçÔ∏è Create markdown email template
        run: |
          cat <<'EOF' > email-template.md
          üöÄ An issue has been marked as **Approved**!
          
          ### Title
          {{ISSUE_TITLE}}
          
          ### Author
          {{ISSUE_AUTHOR}}
          
          ### URL
          {{ISSUE_URL}}
          
          ### Issue Body
          {{ISSUE_BODY}}
          EOF

      - name: Substitute variables into email.md
        run: |
          export ISSUE_TITLE="${{ github.event.issue.title }}"
          export ISSUE_AUTHOR="${{ github.event.issue.user.login }}"
          export ISSUE_URL="${{ github.event.issue.html_url }}"
          export ISSUE_BODY="$(cat issue-body.txt)"
          envsubst < email-template.md > email.md
         
      - name: üì≤ Convert markdown to HTML
        run: |
          sudo apt-get update && sudo apt-get install -y pandoc
          pandoc email.md -f markdown -t html -s -o generated-email.html --metadata title="Request Approved"
        
      - name: üìß Send email notification
        uses: dawidd6/action-send-mail@v4
        with:
          connection_url: ${{secrets.MAIL_CONNECTION}}
          subject: "‚úÖ Request approved!"
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          reply_to: ${{ secrets.MAIL_REPLY_TO }}
          cc: ${{ secrets.MAIL_CC }}
          # bcc: ${{ secrets.MAIL_BCC }}
          # convert_markdown: true
          # envelope_from: mailer@example.com
          # attachments: attachments.zip,git.diff,./dist/static/*.js
          # body: |
          #   üöÄ An issue has been marked as **Approved**!

          #   ### Title
          #   ${{ github.event.issue.title }}

          #   ### Author
          #   ${{ github.event.issue.user.login }}

          #   ### URL
          #   ${{ github.event.issue.html_url }}

          #   ### Issue Body
          #   ${{ github.event.issue.body }}
          html_body: file://generated-email.html
