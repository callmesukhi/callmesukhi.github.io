name: Send Email on Approved Label

on:
  issues:
    types:
      - labeled

permissions:
  issues: read
  contents: read
 
jobs:
  send_email:
    if: github.event.label.name == 'Approved'
    runs-on: ubuntu-latest
    permissions:
        issues: read, write
        contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: üßπ Sanitize issue body and save to file
        run: |
          ISSUE_BODY=$(jq -r '.issue.body' "$GITHUB_EVENT_PATH")
      
          # Replace inline `code` with **bold** (but not triple-backtick blocks)
          ISSUE_BODY=$(echo "$ISSUE_BODY" | sed -E 's/(^|[^`])`([^`]+)`([^`]|$)/\1**\2**\3/g')
      
          # Now wrap ``` blocks inside quote markers
          inside_block=false
          while IFS= read -r line; do
            if [[ "$line" =~ ^\`\`\` ]]; then
              if [ "$inside_block" = false ]; then
                inside_block=true
              else
                inside_block=false
              fi
              echo "> $line"
            elif [ "$inside_block" = true ]; then
              echo "> $line"
            else
              echo "$line"
            fi
          done <<< "$ISSUE_BODY" > issue-body.txt


      - name: ‚úçÔ∏è Create markdown email template
        run: |
          cat <<'EOF' > email-template.md
          üöÄ An issue has been marked as **Approved**!
          
          ### Title
          $ISSUE_TITLE
          
          ### Author
          $ISSUE_AUTHOR
          
          ### URL
          $ISSUE_URL
          
          ### Issue Body
          $ISSUE_BODY
          EOF

      - name: Substitute variables into email.md
        run: |
          export ISSUE_TITLE="${{ github.event.issue.title }}"
          export ISSUE_AUTHOR="${{ github.event.issue.user.login }}"
          export ISSUE_URL="${{ github.event.issue.html_url }}"
          export ISSUE_BODY="$(cat issue-body.txt)"
          envsubst < email-template.md > email.md
               
      - name: üì≤ Convert markdown to HTML
        run: |
          sudo apt-get update && sudo apt-get install -y pandoc
          pandoc email.md -f markdown -t html -s \
            -o generated-email.html \
            --metadata title="Request Approved"
        
      - name: üìß Send email notification
        uses: dawidd6/action-send-mail@v4
        continue-on-error: true
        with:
          connection_url: ${{secrets.MAIL_CONNECTION}}
          subject: "‚úÖ Request approved!"
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          reply_to: ${{ secrets.MAIL_REPLY_TO }}
          cc: ${{ secrets.MAIL_CC }}
          # bcc: ${{ secrets.MAIL_BCC }}
          # convert_markdown: true
          # envelope_from: mailer@example.com
          # attachments: attachments.zip,git.diff,./dist/static/*.js
          # body: 
          html_body: file://generated-email.html


      - name: üìù Handle success or failure
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
          EMAIL_TO: ${{ secrets.MAIL_TO }}
          STATUS: ${{ steps.send_email.outcome }}
        run: |
          if [ "$STATUS" = "success" ]; then
            DOMAIN=$(echo "$EMAIL_TO" | sed -E 's/.*@([^, >]+).*/\1/')
            echo "‚úÖ Email sent to $DOMAIN"

            # Add comment
            curl -s -X POST -H "Authorization: token $GH_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"body\": \"‚úÖ Email was sent successfully to \`$DOMAIN\`.\"}" \
              "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments"

            # Add label
            curl -s -X POST -H "Authorization: token $GH_TOKEN" \
              -H "Content-Type: application/json" \
              -d '[ "Request Sent" ]' \
              "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/labels"

          else
            echo "‚ùå Email failed"

            # Add failure comment with summary from logs
            curl -s -X POST -H "Authorization: token $GH_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"body\": \"‚ùå Email failed to send.\n\nPlease check the workflow logs for details.\"}" \
              "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments"
          fi
